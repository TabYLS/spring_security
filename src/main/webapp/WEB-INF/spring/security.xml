<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- auto-config='true'开启spring security的一些默认配置，access-denied-page="/403.jsp"当没有足够的权限时候跳转到403.jsp -->
	<http auto-config='true' access-denied-page="/403.jsp">
		<!-- 让没登陆的用户也可以访问login.jsp。
			这是因为配置文件中的“/**”配置，要求用户访问任意一个系统资源时，必须拥有ROLE_USER角色，/login.jsp也不例外，
			如果我们不为/login.jsp单独配置访问权限，会造成用户连登陆的权限都没有，这是不正确的。
		 -->
		<intercept-url pattern="/user/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- 可以通过这个方式来实现不过滤登陆页面 -->
		<!-- <intercept-url pattern="/user/login" filters="none" /> -->
		<form-login login-page="/user/login"
					authentication-failure-url="/user/login?error=true" 
					default-target-url="/hello/goto-post" 
					always-use-default-target='true'/>
		<logout logout-success-url="/user/login"/>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" /> 
	</http>
	
	<beans:bean id="myFilter" class="com.spring.study.security3.filter.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" 
		ref="authenticationManager"/>
		<beans:property name="accessDecisionManager"
		ref="myAccessDecisionManagerBean"/>
		<beans:property name="securityMetadataSource"
		ref="securityMetadataSource"/>
	</beans:bean>
	
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailService即可 -->
	<authentication-manager alias="authenticationManager">
		<!-- 使用数据库管理用户权限 -->
		<authentication-provider
			user-service-ref="myUserDetailService">
		    <!-- 如果用户的密码采用了加密的方式则要进行解析 <password-encoder hash="md5"/> -->
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="myUserDetailService"
		class="com.spring.study.security3.MyUserDetailService"/>
	
	
	<!-- 访问决策器，巨顶某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.spring.study.security3.MyAccessDecisionManager"/>
		
	<!-- 资源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.spring.study.security3.MyInvocationSecurityMetadataSource"/>
</beans:beans>